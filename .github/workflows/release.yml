name: Release bot

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install cross
        run: cargo install cross

      - name: Compile x86 binary
        run: |
          cross build --release --target=x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/telegram-bot-torrents telegram-bot-torrents.linux.x86

      - name: Compile armv6 binary
        run: |
          cross build --release --target=arm-unknown-linux-gnueabihf
          cp target/arm-unknown-linux-gnueabihf/release/telegram-bot-torrents telegram-bot-torrents.linux.armv6

      - name: Compile armv7 binary
        run: |
          cross build --release --target=armv7-unknown-linux-gnueabihf
          cp target/armv7-unknown-linux-gnueabihf/release/telegram-bot-torrents telegram-bot-torrents.linux.armv7

      - name: Compile aarch64 binary
        run: |
          cross build --release --target=aarch64-unknown-linux-gnu
          cp target/aarch64-unknown-linux-gnu/release/telegram-bot-torrents telegram-bot-torrents.linux.aarch64

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: telegram-bot-torrents*

  github_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: .

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: telegram-bot-torrents*
          file_glob: true
          asset_name: file
          tag: ${{ github.ref }}
          overwrite: true

  dockerhub:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: gjhenrique
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          file: Dockerfile.ci
          tags: gjhenrique/telegram-bot-torrents:${{ github.ref_name }}
